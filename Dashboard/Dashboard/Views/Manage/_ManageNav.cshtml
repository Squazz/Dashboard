@using Dashboard.Models.Enums
@inject SignInManager<User> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

<ul class="nav nav-pills nav-stacked">
    <li class="@ManageNavPages.IndexNavClass(ViewContext)"><a asp-action="Index">Profile</a></li>
    <li class="@ManageNavPages.ChangePasswordNavClass(ViewContext)"><a asp-action="ChangePassword">Password</a></li>

    @if (User.IsInRole(Roles.Admin) || User.IsInRole(Roles.Manager))
    {
        <li class="@ManageNavPages.ManageUsersNavClass(ViewContext)"><a asp-action="ManageUsers">Manage Users</a></li>
    }
    @if (User.IsInRole(Roles.Admin))
    {
        <li class="@ManageNavPages.ManageCustomers"><a asp-action="ManageCustomers">Manage Customers</a></li>
    }
    @if (User.IsInRole(Roles.Manager))
    {
        <li class="@ManageNavPages.ManageCustomers"><a asp-controller="Customers" asp-action="Edit">Manage Customer</a></li>
    }

    @if (hasExternalLogins)
    {
        <li class="@ManageNavPages.ExternalLoginsNavClass(ViewContext)"><a asp-action="ExternalLogins">External logins</a></li>
    }
    <li class="@ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)"><a asp-action="TwoFactorAuthentication">Two-factor authentication</a></li>
</ul>

